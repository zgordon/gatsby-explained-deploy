{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/templates/posts.js"],"names":["Pagination","pageContext","currentPage","isFirst","isLast","numPages","prevPage","nextPage","console","log","style","display","justifyContent","margin","to","rel","postsQuery","PostsTemplate","data","classes","posts","allMarkdownRemark","edges","title","map","node","key","frontmatter","slug","fontSize","date","excerpt"],"mappings":"0MAmCeA,EAhCI,SAAC,GAGb,IAFLC,EAEI,EAFJA,YAEI,IADJA,YAAeC,EACX,EADWA,YAETC,EAA0B,IAAhBD,EACVE,EAASF,IAFX,EADwBG,SAItBC,EAAWJ,EAAc,GAAM,EAAI,QAAxB,UAA2CA,EAAc,GACpEK,EAAQ,SAAYL,EAG1B,OADAM,QAAQC,IAAIR,EAAaE,EAASC,EAAQE,EAAUC,GAElD,yBACEG,MAAO,CACLC,QAAQ,OACRC,eAAe,gBACfC,OAAO,YAGPV,GACA,kBAAC,OAAD,CAAMW,GAAIR,EAAUS,IAAI,QAAxB,oBAIAX,GACA,kBAAC,OAAD,CAAMU,GAAIP,EAAUQ,IAAI,QAAxB,iBCGKC,GAFEC,UArBO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAejB,GAAkB,EAA3BkB,QAA2B,EAAlBlB,aAChCmB,EAAQF,EAAKG,kBAAkBC,MACrC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAK,4BAA8BtB,EAAYC,cACnDkB,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,6BAASC,IAAKD,EAAKE,YAAYC,MAC7B,4BACE,kBAAC,OAAD,CAAMd,GAAE,SAAWW,EAAKE,YAAYC,MACjCH,EAAKE,YAAYJ,QAGtB,uBAAGb,MAAO,CAAEmB,SAAS,QAArB,aAA0CJ,EAAKE,YAAYG,MAC3D,2BAAIL,EAAKE,YAAYI,aAGzB,kBAAC,EAAD,CAAY9B,YAAaA,MAOR","file":"component---src-templates-posts-js-f8d8ebfef4964f7c4291.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Pagination = ({\n  pageContext,\n  pageContext: { currentPage, numPages },\n}) => {\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? \"/blog\" : `/blog/${currentPage - 2}`\n  const nextPage = `/blog/${currentPage}`\n\n  console.log(pageContext, isFirst, isLast, prevPage, nextPage)\n  return (\n    <nav\n      style={{\n        display: `flex`,\n        justifyContent: `space-between`,\n        margin: `2rem 0`,\n      }}\n    >\n      {!isFirst && (\n        <Link to={prevPage} rel=\"prev\">\n          ← Previous Page\n        </Link>\n      )}\n      {!isLast && (\n        <Link to={nextPage} rel=\"next\">\n          Next Page →\n        </Link>\n      )}\n    </nav>\n  )\n}\n\nexport default Pagination\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Pagination from \"../components/pagination\"\n\nconst PostsTemplate = ({ data, classes, pageContext }) => {\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <Layout>\n      <SEO title={`Blog Post Archive - Page ${pageContext.currentPage}`} />\n      {posts.map(({ node }) => (\n        <article key={node.frontmatter.slug}>\n          <h2>\n            <Link to={`/blog/${node.frontmatter.slug}`}>\n              {node.frontmatter.title}\n            </Link>\n          </h2>\n          <p style={{ fontSize: `70%` }}>Published {node.frontmatter.date}</p>\n          <p>{node.frontmatter.excerpt}</p>\n        </article>\n      ))}\n      <Pagination pageContext={pageContext} />\n    </Layout>\n  )\n}\n\nexport default PostsTemplate\n\nexport const postsQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(posts)/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            excerpt\n            slug\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}